/* tslint:disable */
/* eslint-disable */
/**
 * Makielak API
 * This is a makielak API documentation.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ServiceItem } from './ServiceItem';
import {
    ServiceItemFromJSON,
    ServiceItemFromJSONTyped,
    ServiceItemToJSON,
} from './ServiceItem';

/**
 * 
 * @export
 * @interface HomePageStructureDto
 */
export interface HomePageStructureDto {
    /**
     * 
     * @type {string}
     * @memberof HomePageStructureDto
     */
    welcomeTitle: string;
    /**
     * 
     * @type {string}
     * @memberof HomePageStructureDto
     */
    welcomeSubtitle: string;
    /**
     * 
     * @type {string}
     * @memberof HomePageStructureDto
     */
    welcomeButtonText: string;
    /**
     * 
     * @type {string}
     * @memberof HomePageStructureDto
     */
    aboutUsText: string;
    /**
     * 
     * @type {string}
     * @memberof HomePageStructureDto
     */
    offerTitle: string;
    /**
     * 
     * @type {string}
     * @memberof HomePageStructureDto
     */
    offerButtonText: string;
    /**
     * 
     * @type {Array<ServiceItem>}
     * @memberof HomePageStructureDto
     */
    serviceItems: Array<ServiceItem>;
}

/**
 * Check if a given object implements the HomePageStructureDto interface.
 */
export function instanceOfHomePageStructureDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "welcomeTitle" in value;
    isInstance = isInstance && "welcomeSubtitle" in value;
    isInstance = isInstance && "welcomeButtonText" in value;
    isInstance = isInstance && "aboutUsText" in value;
    isInstance = isInstance && "offerTitle" in value;
    isInstance = isInstance && "offerButtonText" in value;
    isInstance = isInstance && "serviceItems" in value;

    return isInstance;
}

export function HomePageStructureDtoFromJSON(json: any): HomePageStructureDto {
    return HomePageStructureDtoFromJSONTyped(json, false);
}

export function HomePageStructureDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): HomePageStructureDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'welcomeTitle': json['welcomeTitle'],
        'welcomeSubtitle': json['welcomeSubtitle'],
        'welcomeButtonText': json['welcomeButtonText'],
        'aboutUsText': json['aboutUsText'],
        'offerTitle': json['offerTitle'],
        'offerButtonText': json['offerButtonText'],
        'serviceItems': ((json['serviceItems'] as Array<any>).map(ServiceItemFromJSON)),
    };
}

export function HomePageStructureDtoToJSON(value?: HomePageStructureDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'welcomeTitle': value.welcomeTitle,
        'welcomeSubtitle': value.welcomeSubtitle,
        'welcomeButtonText': value.welcomeButtonText,
        'aboutUsText': value.aboutUsText,
        'offerTitle': value.offerTitle,
        'offerButtonText': value.offerButtonText,
        'serviceItems': ((value.serviceItems as Array<any>).map(ServiceItemToJSON)),
    };
}

