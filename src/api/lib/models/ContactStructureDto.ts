/* tslint:disable */
/* eslint-disable */
/**
 * Makielak API
 * This is a makielak API documentation.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AddressDto } from './AddressDto';
import {
    AddressDtoFromJSON,
    AddressDtoFromJSONTyped,
    AddressDtoToJSON,
} from './AddressDto';
import type { FileDto } from './FileDto';
import {
    FileDtoFromJSON,
    FileDtoFromJSONTyped,
    FileDtoToJSON,
} from './FileDto';

/**
 * 
 * @export
 * @interface ContactStructureDto
 */
export interface ContactStructureDto {
    /**
     * 
     * @type {string}
     * @memberof ContactStructureDto
     */
    headerTitle: string;
    /**
     * 
     * @type {FileDto}
     * @memberof ContactStructureDto
     */
    headerImage: FileDto;
    /**
     * 
     * @type {string}
     * @memberof ContactStructureDto
     */
    description: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ContactStructureDto
     */
    phones: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ContactStructureDto
     */
    emails: Array<string>;
    /**
     * 
     * @type {Array<AddressDto>}
     * @memberof ContactStructureDto
     */
    addresses: Array<AddressDto>;
}

/**
 * Check if a given object implements the ContactStructureDto interface.
 */
export function instanceOfContactStructureDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "headerTitle" in value;
    isInstance = isInstance && "headerImage" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "phones" in value;
    isInstance = isInstance && "emails" in value;
    isInstance = isInstance && "addresses" in value;

    return isInstance;
}

export function ContactStructureDtoFromJSON(json: any): ContactStructureDto {
    return ContactStructureDtoFromJSONTyped(json, false);
}

export function ContactStructureDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactStructureDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'headerTitle': json['headerTitle'],
        'headerImage': FileDtoFromJSON(json['headerImage']),
        'description': json['description'],
        'phones': json['phones'],
        'emails': json['emails'],
        'addresses': ((json['addresses'] as Array<any>).map(AddressDtoFromJSON)),
    };
}

export function ContactStructureDtoToJSON(value?: ContactStructureDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'headerTitle': value.headerTitle,
        'headerImage': FileDtoToJSON(value.headerImage),
        'description': value.description,
        'phones': value.phones,
        'emails': value.emails,
        'addresses': ((value.addresses as Array<any>).map(AddressDtoToJSON)),
    };
}

