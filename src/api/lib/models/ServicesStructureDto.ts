/* tslint:disable */
/* eslint-disable */
/**
 * Makielak API
 * This is a makielak API documentation.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FileDto } from './FileDto';
import {
    FileDtoFromJSON,
    FileDtoFromJSONTyped,
    FileDtoToJSON,
} from './FileDto';

/**
 * 
 * @export
 * @interface ServicesStructureDto
 */
export interface ServicesStructureDto {
    /**
     * 
     * @type {string}
     * @memberof ServicesStructureDto
     */
    headerTitle: string;
    /**
     * 
     * @type {FileDto}
     * @memberof ServicesStructureDto
     */
    headerImage: FileDto;
    /**
     * 
     * @type {string}
     * @memberof ServicesStructureDto
     */
    description: string;
    /**
     * 
     * @type {Array<FileDto>}
     * @memberof ServicesStructureDto
     */
    images: Array<FileDto>;
}

/**
 * Check if a given object implements the ServicesStructureDto interface.
 */
export function instanceOfServicesStructureDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "headerTitle" in value;
    isInstance = isInstance && "headerImage" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "images" in value;

    return isInstance;
}

export function ServicesStructureDtoFromJSON(json: any): ServicesStructureDto {
    return ServicesStructureDtoFromJSONTyped(json, false);
}

export function ServicesStructureDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServicesStructureDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'headerTitle': json['headerTitle'],
        'headerImage': FileDtoFromJSON(json['headerImage']),
        'description': json['description'],
        'images': ((json['images'] as Array<any>).map(FileDtoFromJSON)),
    };
}

export function ServicesStructureDtoToJSON(value?: ServicesStructureDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'headerTitle': value.headerTitle,
        'headerImage': FileDtoToJSON(value.headerImage),
        'description': value.description,
        'images': ((value.images as Array<any>).map(FileDtoToJSON)),
    };
}

